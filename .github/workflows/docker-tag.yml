name: docker-tag

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # no zulu-alpine for arm64 (only jdk17 has it)
        docker_target: [ 'temurin::linux/amd64,linux/arm64', 'liberica-alpine:-liberica-alpine:linux/amd64,linux/arm64', 'zulu-alpine:-zulu-alpine:linux/amd64']
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_TOKEN }}
    - name: Get git tag
      id: tag
      uses: dawidd6/action-get-tag@v1
      with:
        strip_v: true
    - name: Docker Image Info
      id: docker_image
      run: |
        DOCKER_FILE=$(echo "${{ matrix.docker_target }}" | cut -f1 -d:)/Dockerfile
        DOCKER_IMAGE=lewinc/activemq:${{ steps.tag.outputs.tag }}$(echo "${{ matrix.docker_target }}" | cut -f2 -d:)
        DOCKER_PLATFORM=$(echo "${{ matrix.docker_target }}" | cut -f3 -d:)
        echo ::set-output name=docker_file::${DOCKER_FILE}
        echo ::set-output name=docker_tags::${DOCKER_IMAGE}
        echo ::set-output name=docker_platform::${DOCKER_PLATFORM}
    - name: docker buildx
      run: |
        docker buildx build . --no-cache \
              --platform  ${{ steps.docker_image.outputs.docker_platform }} \
              -t ${{ steps.docker_image.outputs.docker_tags }} \
              -f ${{ steps.docker_image.outputs.docker_file }} \
              --push
