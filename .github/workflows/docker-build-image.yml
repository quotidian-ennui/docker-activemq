name: docker-build-image

on:
  workflow_call:
    inputs:
      registry_push:
        required: false
        default: false
        description: 'Whether to push to docker registries'
        type: boolean
      target_branch:
        required: true
        description: 'The branch to checkout and work-on'
        type: string
      sha:
        required: false
        description: 'The sha for the commit status'
        type: string
      pull_request:
        required: false
        description: 'The pull request'
        type: string
    secrets:
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker-build-image:
    runs-on: ubuntu-latest
    if: |
      inputs.registry_push == true
    strategy:
      matrix:
        # nicer logging when you look at the workflow run
        docker_target: [ 'temurin', 'liberica-alpine', 'zulu-alpine' ]
        include:
          - docker_target: temurin
            docker_tag_suffix: ''
            docker_platform: linux/amd64,linux/arm64
          - docker_target: liberica-alpine
            docker_tag_suffix: -liberica-alpine
            docker_platform: linux/amd64,linux/arm64
          - docker_target: zulu-alpine
            docker_tag_suffix: -zulu-alpine
            docker_platform: linux/amd64,linux/arm64

    steps:
      - name: step-security/harden-runner
        uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          ref: ${{ inputs.target_branch }}
      - name: Build Docker Image
        id: docker_build
        uses: quotidian-ennui/actions-olio/docker-image-builder@main
        with:
          registry_push: ${{ inputs.registry_push }}
          dockerfile: ${{ matrix.docker_target }}/Dockerfile
          image_tag_suffix: ${{ matrix.docker_tag_suffix }}
          image_platforms: ${{ matrix.docker_platform }}
          ghcr_image_name: ghcr.io/${{ github.repository }}
          dockerhub_image_name: lewinc/activemq
          ghcr_user: ${{ github.repository_owner }}
          ghcr_token: ${{ secrets.GITHUB_TOKEN }}
          dockerhub_user: ${{ secrets.DOCKERHUB_USER }}
          dockerhub_token: ${{ secrets.DOCKERHUB_TOKEN }}

  # Separate job for testing the image because we can't load_locally if we build an arm64 image
  # Also, build msopenjdk even though we don't push it.
  docker-test-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # nicer logging when you look at the workflow run
        docker_target:
          [
            'temurin',
            'liberica-alpine',
            'zulu-alpine',
            'msopenjdk'
          ]
        include:
          - docker_target: temurin
            docker_tag_suffix: ''
            docker_platform: linux/amd64
          - docker_target: liberica-alpine
            docker_tag_suffix: -liberica-alpine
            docker_platform: linux/amd64
          - docker_target: zulu-alpine
            docker_tag_suffix: -zulu-alpine
            docker_platform: linux/amd64
          - docker_target: msopenjdk
            docker_tag_suffix: -msopenjdk
            docker_platform: linux/amd64
    steps:
      - name: Set commit status to pending
        uses: quotidian-ennui/actions-olio/commit-status-and-label@main
        if: |
          inputs.sha != ''
        with:
          sha: ${{ inputs.sha }}
          pull_request: ${{ inputs.pull_request }}
          label_prefix: "docker (${{ matrix.docker_target }}): "
          state: pending
      - name: Checkout
        uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4.2.1
        with:
          ref: ${{ inputs.target_branch }}
      - name: Build Docker Image
        id: docker_build
        uses: quotidian-ennui/actions-olio/docker-image-builder@main
        with:
          registry_push: false
          load_locally: true
          dockerfile: ${{ matrix.docker_target }}/Dockerfile
          image_tag_suffix: ${{ matrix.docker_tag_suffix }}
          image_platforms: ${{ matrix.docker_platform }}
          dockerhub_image_name: ${{ github.repository_owner }}/activemq-test
      - name: ActiveMQ Version
        id: docker_test
        env:
          DOCKER_TAGS: ${{ steps.docker_build.outputs.image_tags }}
        run: |
          test_image=$(echo "$DOCKER_TAGS" | head -n 1 | cut -d' ' -f1)
          docker run --rm --entrypoint=bash "$test_image" bin/activemq --version
      - name: Cleanup
        # Our work here is done, so cleanup
        id: cleanup
        if: success() || failure()
        continue-on-error: true
        env:
          DOCKER_TAGS: ${{ steps.docker_build.outputs.image_tags }}
        run: |
          for image in "$DOCKER_TAGS"; do
            docker rmi "$image" || true
          done
      - name: set commit status
        uses: quotidian-ennui/actions-olio/commit-status-and-label@main
        if: |
          (success() || failure()) &&  inputs.sha != ''
        with:
          sha: ${{ inputs.sha }}
          pull_request: ${{ inputs.pull_request }}
          label_prefix: "docker (${{ matrix.docker_target }}): "
          state: ${{ steps.docker_test.outcome || steps.docker_build.outcome }}
