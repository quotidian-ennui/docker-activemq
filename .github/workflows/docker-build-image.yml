name: docker-build-image

on:
  workflow_call:
    inputs:
      registry_push:
        required: false
        default: false
        description: 'Whether to push to docker registries'
        type: boolean
      target_branch:
        required: true
        description: 'The branch to checkout and work-on'
        type: string
    secrets:
      DOCKERHUB_USER:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker-build-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # interestingly liberica-alpine is slightly bigger than zulu-alpine
        # might be because it appears to be glibc not muslc?
        # We're actually abusing matrix strategy here (because we can)
        # <dirname>:<image-suffix>:<archs-to-build-for>
        docker_target: [ 'temurin::linux/amd64,linux/arm64', 'liberica-alpine:-liberica-alpine:linux/amd64,linux/arm64', 'zulu-alpine:-zulu-alpine:linux/amd64,linux/arm64/v8']
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.target_branch }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      if:  ${{ inputs.registry_push == true }}
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Login to GitHub Container Registry
      if:  ${{ inputs.registry_push == true }}
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Docker Image Info
      id: docker_image
      run: |
        DOCKER_FILE=$(echo "${{ matrix.docker_target }}" | cut -f1 -d:)/Dockerfile
        DOCKER_IMAGE_SUFFIX=$(echo "${{ matrix.docker_target }}" | cut -f2 -d:)
        DOCKER_PLATFORM=$(echo "${{ matrix.docker_target }}" | cut -f3 -d:)
        echo "docker_file=${DOCKER_FILE}" >> $GITHUB_OUTPUT
        echo "docker_image_suffix=${DOCKER_IMAGE_SUFFIX}" >> $GITHUB_OUTPUT
        echo "docker_platform=${DOCKER_PLATFORM}" >> $GITHUB_OUTPUT
    - name: Docker Image Metadata
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ghcr.io/${{github.repository}}
          lewinc/activemq
        flavor: |
          latest=auto
          suffix=${{ steps.docker_image.outputs.docker_image_suffix }},onlatest=true
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}
    - name: Build Image
      uses: docker/build-push-action@v4
      with:
        # no-cache: true
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ${{ steps.docker_image.outputs.docker_file }}
        platforms: ${{ steps.docker_image.outputs.docker_platform }}
        push: ${{ inputs.registry_push }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        provenance: false
